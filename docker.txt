version: "3.8"
services:

  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - database_adminer
      - kong_adminer

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    container_name: kong-database
    restart: on-failure
    networks:
      - kong-net
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    volumes:
      - "kong_data:/var/lib/postgresql/data"

  #######################################
  # Kong database migration
  #######################################
  kong-migrations:
    image: kong
    command: kong migrations bootstrap
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:latest
    restart: on-failure
    container_name: kong
    volumes:
      - ./kong:/usr/local/kong/declarative
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl 
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      #KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    ports:
      - 80:8000
      - 443:8443
    depends_on:
      - kong-database
    networks:
      - kong_auth
      - kong_core
      - kong_adminer


  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga
    container_name: konga
    restart: always
    networks:
        - kong-net   
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:kong@kong-database:5432/konga
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - 1337:1337

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always

  node_exporter:
    image: prom/node-exporter:latest
    ports:
      - 9100:9100
    container_name: node_exporter
    restart: always
    depends_on:
      - prometheus

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    restart: always
    links: 
      - prometheus:prometheus
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel, grafana-simple-json-datasource
    depends_on:
      - prometheus

  #nexus:
  #  hostname: nexus
  #  image: sonatype/nexus3
  #  #build: ./nexus
  #  ports:
  #    - "18081:8081"

  sonarqube:
    image: 'sonarqube:latest'
    container_name: sonarqube
    restart: always
    ports:
      - '9001:9000'
    networks:
      - sonarnet
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 'true'
      SONAR_JDBC_URL: 'jdbc:postgresql://db:5432/sonar'
      SONAR_JDBC_USERNAME: 'sonar'
      SONAR_JDBC_PASSWORD: 'sonar'
    #depends_on:
    #  - db
    volumes:
      - ./extension:/opt/sonarqube/extensions/plugins/
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      #- sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

volumes:
  kong_data: {}
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  #sonarqube_bundled-plugins:

networks:
  database_adminer:
  database_io:
  core_io:
  core_email:
  auth_core:
  auth_io:
  kong_adminer:
  kong_auth:
  kong_core:
  public_kong:
  sonarnet:
  kong-net:




